name: eamxx-sa

on:
  # Runs on PRs against master
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, ready_for_review, reopened]
    paths:
      - components/eamxx/**
      - components/eam/src/physics/rrtmgp/**
      - components/eam/src/physics/p3/scream/**
      - components/eam/src/physics/cam/**
      - .github/workflows/eamxx-standalone-testing.yml
  pull_request_review:
    types: [submitted]

  # Manual run is used to bless
  workflow_dispatch:
    inputs:
      jobs_list:
        description: 'Job to run'
        required: true
        type: choice
        options:
          - gcc-openmp
          - gcc-cuda
      bless:
        description: 'Generate baselines'
        required: true
        type: boolean

  # Add schedule trigger for nightly runs at midnight MT (Standard Time)
  schedule:
    - cron: '0 7 * * *'  # Runs at 7 AM UTC, which is midnight MT during Standard Time

concurrency:
  # Two runs are in the same group if:
  #  - they have the same trigger
  #  - if trigger=pull_request/pull_request_review, the PR number must match
  #  - if trigger=workflow_dispatch/schedule: no concurrency
  group: ${{ github.workflow }}-${{ github.event_name }}-${{
             (github.event_name == 'pull_request' || github.event_name == 'pull_request_review') && github.event.pull_request.number || github.run_id
           }}
  cancel-in-progress: true

jobs:
  gcc-openmp:
    runs-on:  [self-hosted, ghci-snl-cpu, gcc]
    strategy:
      fail-fast: false
      matrix:
        build_type: [sp, dbg, fpe, opt]
    if: ${{ !(github.event_name == 'workflow_dispatch' && github.event.inputs.jobs_list != 'gcc-openmp') }}
    name: gcc-openmp / ${{ matrix.build_type }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          show-progress: false
          submodules: recursive
      - name: Show action trigger
        uses: ./.github/actions/show-workflow-trigger
      - name: Check for skip labels
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'pull_request_review' }}
        uses: ./.github/actions/check-skip-labels
        with:
          skip_labels: 'AT: skip gcc,AT: skip openmp,AT: skip eamxx-sa,AT: skip eamxx-all'
          token: ${{ secrets.GITHUB_TOKEN }}
          pr_number: ${{ github.event.pull_request.number }}
      - name: Set test-all inputs based on event specs
        run: |
          echo "submit=false" >> $GITHUB_ENV
          echo "generate=false" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "submit=true" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ inputs.bless }}" == "true" ]; then
              echo "generate=true" >> $GITHUB_ENV
            fi
          fi
      - name: Run tests
        uses: ./.github/actions/test-all-scream
        with:
          build_type: ${{ matrix.build_type }}
          machine: ghci-snl-cpu
          generate: ${{ env.generate }}
          submit: ${{ env.submit }}
          cmake-configs: Kokkos_ENABLE_OPENMP=ON
  gcc-cuda:
    runs-on:  [self-hosted, ghci-snl-cuda, cuda, gcc]
    strategy:
      fail-fast: false
      matrix:
        build_type: [sp, dbg, opt]
    # Run this workflow if:
    #   - workflow_dispatch: user requested this job.
    #   - schedule: always:
    #   - pull_request: matching skip label is NOT found
    if: |
      ${{
          github.event_name == 'schedule' ||
          ( github.event_name == 'workflow_dispatch' && github.event.inputs.jobs_list == 'gcc-cuda' ) ||
          (
            github.event_name == 'pull_request' &&
            !(
              contains(github.event.pull_request.labels.*.name, 'AT: skip gcc') ||
              contains(github.event.pull_request.labels.*.name, 'AT: skip cuda') ||
              contains(github.event.pull_request.labels.*.name, 'AT: skip eamxx-sa') ||
              contains(github.event.pull_request.labels.*.name, 'AT: skip eamxx-all')
            )
          )
        }}
    name: gcc-cuda / ${{ matrix.build_type }}
    steps:
      - name: Show action trigger
        uses: actions/github-script@v7
        with:
          script: |
            const eventName = context.eventName;
            const eventAction = context.payload.action || 'N/A';
            const actor = context.actor;
            console.log(`The job was triggered by a ${eventName} event.`);
            console.log(`  - Event action: ${eventAction}`);
            console.log(`  - Triggered by: ${actor}`);
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          show-progress: false
          submodules: recursive
      - name: Set test-all inputs based on event specs
        run: |
          echo "submit=false" >> $GITHUB_ENV
          echo "generate=false" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" == "schedule" ]; then
            echo "submit=true" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ inputs.bless }}" == "true" ]; then
              echo "generate=true" >> $GITHUB_ENV
            fi
          fi
      - name: Run tests
        uses: ./.github/actions/test-all-scream
        with:
          build_type: ${{ matrix.build_type }}
          machine: ghci-snl-cuda
          generate: ${{ env.generate }}
          submit: ${{ env.submit }}
          cmake-configs: Kokkos_ARCH_VOLTA70=ON;CMAKE_CUDA_ARCHITECTURES=70
